dict字典:
  以key:value的形式保存,dict是可变数据类型
  key的特点:
    1.无序的
    2.唯一的
    3.是不可变数据类型
  
  增/改:
    dict[key]=value  若key不存在,则新增一个元素,若key存在,则覆盖原来的值
    
  删:
    dict.pop(key) 删除key对应的元素,若key不存在,抛异常
    dict.pop(key,default) 删除key对应的元素,若key不存在,返回默认值default
    
  查:
    dict[key] 获取key对应的value,若key不存在,抛异常
    dict.get(key) 获取key对应的value,key不存在返回None
    dict.get(key,default) 获取key对应的value,若key不存在返回None
    
tuple元组:
  不可变数据类型,一个有序的集合,一旦初始化之后不能再修改
  
  增,删:没有这种操作
  改:若tuple的元素是可变类型,可以对该元素的元素进行修改
  查:
    tuple[index]根据索引查询对应的元素
    tuple.index(元素)查询元素第一次匹配到的索引

set集合
  特点:
    1.可变数据类型
    2.不重复的
    3.无序的
    4.相当于dict的key
  创建:
    {12,23},{}空的表示是一个字典
    通过list,tuple,string,dict创建
  增:
    set.add(元素) 添加单个元素
    set.update(序列) 添加多个元素
  删:
    set.pop() 随机删除一个元素,不能给参数
    set.remove(元素) 删除指定的元素
  查:
    for i in set:
      print(i,end=' ')
  改:
    不能改
    
  set集合的交集,并集,差集(只有set有)
    交集:set1&set2
    并集:set1|set2
    差集:set1-set2
    
list:
  特点:
    1.有序的
    2.可重复的
    3.可变数据类型
  增:
    list.append(元素) 往list末尾添加一个元素
    list.extend(序列) 往list末尾添加多个元素
  删:
    list.pop(index) 删除索引对应的值
    list.remove(元素) 删除指定的元素
    list.clear() 清空list
  查:
    list[index] 获取索引对应的值
    list.index(元素) 获取元素第一次匹配的索引
  改:
    list[index] = value 若index存在,覆盖原有值,若不存在则报错
  lsit排序:
    默认是升序
    list.sort(reverse=True) 反转,变降序
    sorted(list,reverse=True) 反转,变降序
    list.reverse() 反转,变降序
    
 
 浅拷贝与深拷贝
 import copy
 copy.copy(list)  浅拷贝,拷贝元素的内存地址
 copy.deepcopy(list)  深拷贝,开创一个新的存储空间
 
